#!/bin/sh

# package : filtr
# version : 1.0
# author : Aaron Straup Cope
# url : http://github.com/straup/filtr
# copyright : Copyright (c) 2005-2013 Aaron Straup Cope. All Rights Reserved.
# license : Perl Artistic License. This is free software, you may use it and
#           distribute it under the same terms as Perl itself.

NAME="filtr"
VERSION="1.0"

case $1 in
    ''|-h|-help|--help|-u|--usage|'-?')
    echo "${NAME} ${VERSION}"
    echo "Usage: `basename $0` in.jpg out.jpg [brdl|dazd|dthr|filtr|postr|postcrd|pxl|pxldthr|rockstr|stndpipe]"
    # echo "       `basename $0` in.mp4 out.jpg movr <filter>"
    echo "       `basename $0` in1.jpg in2.jpg heathr <in1-filtr> <in2-filtr> out.jpg"
    # echo "       `basename $0` in1.jpg in2.jpg stndpipe <in1-filtr> <in2-filtr> out.jpg"
    exit 0
    ;;
    *)
    ;;
esac

# operating system nonsense

OS=`uname`

echo "[startup] ${NAME} ${VERSION}"
# echo "[startup] ${OS} ${PATH}"

if test $OSTYPE = "FreeBSD"
then
    WHOAMI=`realpath $0`
elif test $OSTYPE = "darwin"
then
    WHOAMI=`python -c 'import os, sys; print os.path.realpath(sys.argv[1])' $0`
else
    WHOAMI=`readlink -f $0`    
fi

UTILS=`dirname $WHOAMI`/utils
RECIPES=`dirname $WHOAMI`/recipes

# bare-bones input

INPUT=$1
OUTPUT=$2
FILTER=$3

# bare-bones sanity checking

for file  in ${INPUT}
do

  if ! [ -e ${file} ]
  then
      echo "[startup] input file ${file} does not exist"
      echo "[startup] exiting"
      exit 1
  fi
done

echo "[startup] '${FILTER}' filter GO!"

case $FILTER in

    heathr)
	INPUT1=$1
	INPUT2=$2
	# $3 is 'heathr'
	FILTR1=$4
	FILTR2=$5
	OUTPUT=$6
	
	${RECIPES}/${FILTER} ${INPUT1} ${INPUT2} ${FILTR1} ${FILTR2} ${OUTPUT}
	;;

    stndpipe)
	INPUT1=$1
	INPUT2=$2
	# $3 is 'stndpipe'
	OUTPUT=$4
	
	${RECIPES}/${FILTER} ${INPUT1} ${INPUT2} ${OUTPUT}
	;;	
	
    pxldthr)

	# should this be put in a recipe... (20130120/straup)

	${RECIPES}/pxl ${INPUT} ${OUTPUT}
	${RECIPES}/dthr ${OUTPUT} ${OUTPUT}
	;;

    dthrpxl)

	# pxl freaks out if INPUT and OUTPUT are the same
	# should this be put in a recipe... (20130120/straup)

	ROOT=`dirname ${OUTPUT}`
	FNAME=`basename ${OUTPUT}`
	DP_TMP=${ROOT}/tmp-${FNAME}

	${RECIPES}/dthr ${INPUT} ${DP_TMP}
	${RECIPES}/pxl ${DP_TMP} ${OUTPUT}
	
	rm -f ${DP_TMP}
	;;

    *)

	if [ ! -f ${RECIPES}/${FILTER} ]
	then
	    echo "[startup] Can't find recipe for ${FILTER}, exiting"
	    exit
	fi

	${RECIPES}/${FILTER} ${INPUT} ${OUTPUT}
	;;
esac

echo "[startup] transfer exif data"

case $FILTER in

    heathr|stndpipe)
	echo "E_EXCESSIVE_EXIF: multiple input files"
	;;

    *)
	${UTILS}/mvexif ${INPUT} ${OUTPUT}
	;;
esac

echo "[startup] done"
exit
